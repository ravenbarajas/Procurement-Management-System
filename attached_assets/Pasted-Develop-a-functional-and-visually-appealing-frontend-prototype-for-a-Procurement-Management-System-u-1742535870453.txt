Develop a functional and visually appealing frontend prototype for a Procurement Management System using React (TypeScript) and Shadcn UI components. The system should focus on tracking procurement processes, managing vendor contracts, and providing financial insights. It must include real-time analytics and reporting tools, as well as interactive mock data to simulate realistic scenarios. Backend integration is not required.

Requirements:

Core Features:

Procurement Tracking: Pages to monitor purchase orders, approvals, and delivery statuses.

Vendor Management: Interface for managing vendor details, contracts, and performance metrics.

Financial Insights: Dashboard displaying KPIs such as total procurement spend, cost savings, and budget utilization.

Real-Time Analytics: Interactive charts and reports with mock data for trends in procurement activities.

UI/UX Specifications:

Use Shadcn UI components for a polished and consistent design.

Implement both dark mode and light mode toggle functionality.

Ensure responsive design for seamless use across devices (desktop, tablet, mobile).

Navigation:

Intuitive navigation bar with links to:

Dashboard

Procurement Processes

Vendor Management

Financial Reports

Settings (including theme toggle)

Breadcrumbs for easy navigation within nested pages.

Mock Data:

Create mock data to simulate:

Purchase orders (e.g., pending, approved, rejected).

Vendor performance metrics (e.g., delivery time, contract compliance).

Financial transactions (e.g., budget allocation vs. actual spend).

Use JSON files or in-memory data storage for simplicity.

Real-Time Interactivity:

Include interactive elements such as:

Filterable tables for purchase orders and vendor contracts.

Drill-down charts for procurement trends.

Search functionality across all pages.

Key Performance Indicators (KPIs):

Display KPIs prominently on the dashboard:

Total Procurement Spend

Cost Savings Achieved

Average Vendor Rating

Number of Pending Approvals

Tools & Libraries:

Framework: React with TypeScript.

UI Components: Shadcn UI.

Charting Library: Use Chart.js or Recharts for analytics visualizations.

State Management: Context API or Zustand for managing application state.

Development Practices:

Modular component structure with reusable UI elements.

Type-safe development using TypeScript interfaces and types.

Follow best practices for accessibility (e.g., ARIA roles).

Deliverables:

A fully functional frontend prototype with all specified pages and features.

A README file with instructions on how to run the project locally.

Documentation of the folder structure and key components.